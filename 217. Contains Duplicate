217. Contains Duplicate

Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.


Example 1:

Input: nums = [1,2,3,1]

Output: true

Explanation:

The element 1 occurs at the indices 0 and 3.



class Solution {
    // Space complexity O(N)
    // Time complexity O(N)
    public boolean containsDuplicate(int[] nums){
    HashMap<Integer, Boolean> map = new HashMap();
    for(int i : nums){
        if(map.containsKey(i))
            return true;
        else
            map.put(i, true);
    }
    return false;
   }
}


	/*
	 * Brute Force          O(N^2)
	 * Create nested loops
	 * take 1 element and compare with rest of the elements
	 * if not found take next element and compare with the remaining
	 * */
//  public boolean containsDuplicate(int[] nums) {
//         for(int i = 0; i < nums.length - 1; i++){
//             for(int j = i+1; j < nums.length; j++){
//                 if(nums[i] == nums[j])
//                     return true;
//             }
//         }
//         return false;
//     }




/*
	 * Brute Force 
	 * Create nested loops
	 * take 1 element and compare with rest of the elements
	 * if not found take next element and compare with the remaining
	 * */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int arr[]= {1,2,3,1,5};
		for(int i=0; i < arr.length - 1; i++) {
			for(int j =i+1 ; j < arr.length;j++) {
				if(arr[i]==arr[j])
					System.out.println("True");
				else
					System.out.println("False");
			}
		}
	} 
